/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var lotes = ee.FeatureCollection("users/masanellia/test");
/***** End of imports. If edited, may not auto-convert in the playground. *****/


var cloudBitMask = ee.Number(2).pow(10).int();
var cirrusBitMask = ee.Number(2).pow(11).int();

function MaskS2Clouds(image) {
  var qa = image.select('QA60');
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0).and(
             qa.bitwiseAnd(cirrusBitMask).eq(0));
  return image.updateMask(mask);
}

function addNDVI(image) {
  var evi = image.expression(
    '2.5 * ( (NIR-RED) / (NIR + 6 * RED - 7.5 * BLUE))', 
    {
      'NIR':image.select('B8'),
      'RED':image.select('B4'),
      'BLUE':image.select('B2')
    }
  );
  //return image.addBands(image.normalizedDifference(['B8', 'B4']).rename('NDVI'));
  return evi.rename('INDEX');
}



var geometry = ee.FeatureCollection("users/masanellia/provincia");
var filtro = ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 5);
var S2Collection = ee.ImageCollection('COPERNICUS/S2').filterBounds(geometry).filterDate('2018-01-01', '2020-01-01').filter(filtro);
var S2CloudMasked = S2Collection.map(MaskS2Clouds);
var unfINDEX = S2CloudMasked.map(addNDVI).select(['INDEX']);

var months = ee.List([1,4]);

var sape = lotes.map(function(feature){
  
  var garca = months.map(function(m){
    
    var x = ee.Number(m);
    var start = ee.Date.fromYMD(2019,x,01);
    var end = ee.Date.fromYMD(2019,x.add(1),01);
    var filINDEX = unfINDEX.filterDate(start,end).mean();
    var mean = ee.Number(filINDEX.reduceRegion({
      reducer: ee.Reducer.mean(),
      geometry: feature.geometry(),
      scale: 30,
      maxPixels: 1e9
    }).get('INDEX'));
    
    return mean;
  });
  
  return feature.set({ndvis:garca});
});



print (sape);