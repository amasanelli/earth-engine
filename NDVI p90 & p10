/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var DEM = ee.Image("USGS/SRTMGL1_003"),
    JRC = ee.Image("JRC/GSW1_0/GlobalSurfaceWater"),
    geometry = /* color: #0000ff */ee.Geometry.Polygon(
        [[[-58.01736499719874, -38.31929325271683],
          [-58.04259921961085, -38.338684572706896],
          [-58.02603389673487, -38.35059958040846],
          [-58.00097133569972, -38.32898956126387],
          [-58.01410343103663, -38.31936059266518]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
//Pre-zones
//Definir rangos
//Reclassify
//Zones
//Pre-zones
//Definir rangos
//Reclassify
//Zones
var dataset = JRC;
var regionJSON = JSON.stringify(geometry.getInfo());
var ndvi_pal = ['#FF0000',  '#FBFF00','#357100'];
var cloudBitMask = ee.Number(2).pow(10).int();
var cirrusBitMask = ee.Number(2).pow(11).int();

function MaskS2Clouds(image) {
  var qa = image.select('QA60');
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0).and(
             qa.bitwiseAnd(cirrusBitMask).eq(0));
  return image.updateMask(mask);
}
function addNDVI(image) {
  return image.addBands(image.normalizedDifference(['B8', 'B4']).rename('NDVI'));
}

//var filtro = ee.Filter.and(ee.Filter.or(ee.Filter.calendarRange(10,11,'month'),ee.Filter.calendarRange(01,02,'month')),ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 5));
var filtro = ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 5);
var S2Collection = ee.ImageCollection('COPERNICUS/S2').filterBounds(geometry).filter(filtro);
var S2CloudMasked = S2Collection.map(MaskS2Clouds);
var unfNDVI = S2CloudMasked.map(addNDVI).select(['NDVI']);

var NDVI_max= unfNDVI.reduce(ee.Reducer.percentile([90])).clip(geometry);
Map.addLayer(NDVI_max, {min:0.4, max:0.8, palette: ndvi_pal}, 'NDVI_p90');
Export.image.toDrive({image: NDVI_max,folder: "earth_engine",description: 'NDVI_p90',scale: 10,'region':regionJSON});

var NDVI_min= unfNDVI.reduce(ee.Reducer.percentile([10])).clip(geometry);
Map.addLayer(NDVI_min, {min:0, max:0.3, palette: ndvi_pal}, 'NDVI_p10');
Export.image.toDrive({image: NDVI_min,folder: "earth_engine",description: 'NDVI_p10',scale: 10,'region':regionJSON});

//CLUSTERS

var training = NDVI_max.sample({region:geometry,scale:10,factor:1});
var clusterer = ee.Clusterer.wekaKMeans(5).train(training);
var result = NDVI_max.cluster(clusterer);
Map.addLayer(result.randomVisualizer(), {}, 'clusters');


//DEM

var elevation = DEM.select('elevation').clip(geometry);
var p90_lote = ee.Number(elevation.reduceRegion({reducer: ee.Reducer.percentile([90]),geometry:geometry,maxPixels:1e9,scale:30,}).get('elevation'));
var p10_lote = ee.Number(elevation.reduceRegion({reducer: ee.Reducer.percentile([10]),geometry:geometry,maxPixels:1e9,scale:30,}).get('elevation'));
var dem_pal = ['#33E6FF','#734F00'];
Map.addLayer(elevation, {min:p10_lote.getInfo(), max:p90_lote.getInfo(), palette: dem_pal}, 'DEM');
Export.image.toDrive({image: elevation,folder: "earth_engine",description: 'DEM',scale: 30,'region':regionJSON,});

var occurrence = JRC.select('occurrence').clip(geometry);
var p90_lote = ee.Number(occurrence.reduceRegion({reducer: ee.Reducer.percentile([90]),geometry:geometry,maxPixels:1e9,scale:30,}).get('occurrence'));
var p10_lote = ee.Number(occurrence.reduceRegion({reducer: ee.Reducer.percentile([10]),geometry:geometry,maxPixels:1e9,scale:30,}).get('occurrence'));
var dem_pal = ['ffffff', 'ffbbbb', '0000ff'];
Map.addLayer(occurrence, {min:p10_lote.getInfo(), max:p90_lote.getInfo(), palette: dem_pal}, 'JRC');
Export.image.toDrive({image: occurrence,folder: "earth_engine",description: 'JRC',scale: 30,'region':regionJSON,});
